<html>
<head>
    <meta charset="utf-8">
    <style>
        html, body {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            background: #000;
        }
    </style>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Player</title>
</head>
<body>
    <div id="player" style="width:100%; height:100%;"></div>
    
    <script src="https://tvmoldova.github.io/x.js"></script>
    <script src="https://cdn.peerflow.io/ppsp/ppsp.js"></script>
    <script src="https://cdn.peerflow.io/pjs-peerflow-adapter/pjs-peerflow-adapter.js"></script>
    
    <script>
        var peerFlowConfig = {
            swarmID: '0469e2b5fc0e9a3b6929ef2b5efd0d7eaf5b72320822602531416ba5730e7eba95a68f44c9715b42f382ca1800de4e2c179465152e57a5f2c1983cbd4877a4ca8e',
            stun: ['stun2.peerflow.io:19302', 'stun.l.google.com:19302']
        };
        var pjsPeerflowAdapter;

        // Эта функция будет вызвана, когда плеер будет готов
        const PlayerReady = (id) => {
            pjsPeerflowAdapter = new PjsPeerflowAdapter(
                window.player,
                'OTA3ZjlmZjYtMzIxYS00NWEzLWEyNDQtN2I1ODQ4ZWY4MzVjOjZlc2J5MlQzR3ZzRW9YcWJIdFVwc0RNWVZJY294NGRq',
                peerFlowConfig
            );
            
            // Получаем ссылку на поток из URL-адреса
            const urlParams = new URLSearchParams(window.location.search);
            const streamUrl = urlParams.get('file'); // Ищем параметр ?file=...

            // Если ссылка найдена, вручную запускаем плеер
            if (streamUrl) {
                window.player.api("file", streamUrl);
                window.player.api("play");
            }
        };

        // Инициализируем плеер БЕЗ autoplay
        window.player = new Playerjs({
            id: "player",
            // file: будет установлен в PlayerReady
            ready: "PlayerReady" // Указываем callback-функцию
        });
    </script>
</body>
</html>
